<?php

namespace PS\ParametreBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;

/**
 * AnalyseRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AssuranceRepository extends EntityRepository
{
    public function getMaxIdentifiant()
    {
        //$qb = $this->getEntityManager()->createQueryBuilder('a');

        $query = $this->getEntityManager()->createQuery('SELECT MAX(u.identifiant) FROM ParametreBundle:Assurance u');

        $identifiant = intval($query->getScalarResult());


        $identifiant += 1;

        if ($identifiant < 11) {
            $identifiant = str_pad($identifiant, 2, '0', STR_PAD_LEFT);
        }
        return $identifiant;
    }


    /**
     * On teste si le couple PIN + ID existe
     * @param  int $pin         
     * @param  int $identifiant 
     * @return int
     */
    public function exists($assurance)
    {
        $em = $this->getEntityManager();
        $qb = $em
            ->createQuery('SELECT a.id FROM ParametreBundle:Assurance a WHERE a.id = ?1 OR a.nom = ?2')
            ->setParameter(1, $assurance)
            ->setParameter(2, $assurance);
        try {
          $result = $qb->getOneOrNullResult(); 
        } catch (NoResultException $e) {
            $result = null;
        }

        return $result;
    }



    public function getList($utilisateur, $patient, $result = false)
    {
        
        $hopital = $utilisateur->getHopital();
        $assurances = $hopital->getAssurances();

        $ids = [];

        foreach ($assurances as $assurance) {
            $ids[] = $assurance->getId();
        }
        //dump($assurances);exit;

        $qb = $this->getEntityManager()->createQueryBuilder();
        $stmt = $qb->select('a')
            ->from('ParametreBundle:Assurance', 'a')
            ->where($qb->expr()->in('a.id', count($ids) ? $ids: [0]));
            //->andWhere('h.id = :hopital')
            /*->andWhere($qb->expr()->not($qb->expr()->exists('
                SELECT i  FROM GestionBundle:Infirmier i
                WHERE m.id  = i.id
            ')))*/
            //->setParameter('hopital', $hopital)
            //->setParameter('assurances', count($assurances) ? $assurances: [-1],  \Doctrine\DBAL\Connection::PARAM_STR_ARRAY);

        if ($result) {
            return $stmt->getQuery()->getResult();
        }
        return $stmt;
    }
}
