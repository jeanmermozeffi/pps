<?php

namespace PS\GestionBundle\Repository;

/**
 * PatientConstanteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PatientConstanteRepository extends \Doctrine\ORM\EntityRepository
{
    public function minYear($constante, $patient)
    {
        $query = $this->getEntityManager()->createQuery('SELECT MIN(YEAR(p.date)) FROM GestionBundle:PatientConstante p WHERE p.constante = :constante AND p.patient = :patient');

        $query->setParameters(compact('constante', 'patient'));

        $annee = intval($query->getSingleScalarResult());


        
        return $annee ?: date('Y');
    }


    public function countByPatient($patient, $constante)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('COUNT(c.id)')
            ->from('GestionBundle:PatientConstante', 'c')
            ->where("c.patient = :patient")
            ->andWhere('c.constante = :constante')
            ->setParameter('patient', $patient)
            ->setParameter('constante', $constante);
        return $qb->getQuery()->getSingleScalarResult();
    }


    public function findAllByPatient($patient, $constante, $annee = null, $limit = null, $offset = null)
    {
       $params = ['patient' => $patient, 'constante' => $constante];
        $qb = $this->createQueryBuilder('c');
        $qb->andWhere("c.patient = :patient")
            ->andWhere('c.constante = :constante');

        if ($annee) {
            $qb->andWhere('YEAR(c.date) = :annee');
            $params['annee'] = $annee;
        }

        //dump($params, $limit, $offset);exit;

        $qb->orderBy('c.date', 'DESC')
            ->setParameters($params)
            ->setFirstResult($offset)
            ->setMaxResults($limit);

        return $qb->getQuery()->getResult();
    }



    /**
     * @param $mesure
     * @param $patient
     * @param $annee
     * @return mixed
     */
    public function data($constante, $patient, $annee)
    {
        $and_where_str = '';
        $em            = $this->getEntityManager()->getConnection();
        $sql           = <<<SQL
SELECT YEAR(`date`), MONTH(`date`) AS mois, AVG(valeur) AS val_moy
FROM patient_constante
WHERE patient_id = :patient_id
AND constante_id = :constante_id
%s
GROUP BY YEAR(`date`), MONTH(`date`)
SQL
        ;

        $params = ['patient_id' => $patient->getId(), 'constante_id' => $constante->getId() /*, 'annee' => $annee*/];

        if ($annee) {
            $sql             = sprintf($sql, ' AND YEAR(`date`) = :annee');
            $params['annee'] = $annee;
        } else {
            $sql = sprintf($sql, ' AND 1=1 ');
        }

        $stmt = $em->prepare($sql);
        $stmt->execute($params);

        return $stmt->fetchAll(\PDO::FETCH_GROUP);

    }
}
