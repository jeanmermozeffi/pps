{% extends 'AvanzuAdminThemeBundle:layout:base-layout.html.twig' %}
{% block javascripts_head %}
        
        <script src="{{ asset('bundles/avanzuadmintheme/vendor/chart.js/Chart.js') }}"></script>
       
    {% endblock %}


    {% block page_content %}
     <div class="row">
        <div class="col-md-12">
            <a class="btn btn-default" data-toggle="modal" data-target="#modal-table"
                            href="{{ path('gestion_patientconstante_new', {id: constante.id, patient: patient.id,annee: annee}) }}"
                           ><i class="fa fa-plus"></i> Nouveau </a>

            <div class="chart">
                <form method="get" class="form-horizontal">
                  
                  
                  <div class="form-group">
                      
                      <label for="annee" class="control-label col-md-2">Année</label>
                      <div class="col-md-5">
                      <select id="annee" name="annee" class="form-control input-sm">
                        <option value=""></option>
                      {% for _annee in annees %}
                          <option value="{{ _annee }}" {% if _annee == annee %}selected{% endif %}>{{ _annee }}</option>
                      {% endfor %}
                      </select>
                      </div>
                  </div>
                 
                  <div class="form-group">
                      <div class="col-md-offset-2 col-md-5">
                          <button>Valider</button>
                      </div>
                  </div>
                </form>
        
                <canvas id="areaChart" style="height:250px"></canvas>
                <!--<canvas id="lineChart" style="height:250px"></canvas>-->
              </div>
        </div>
    </div>
    
    {% endblock %}
{% block page_title %}
        Suivi - {{ constante.libelle }}
    {% endblock %}

    {% block page_subtitle %}
    {% endblock %}

{% block javascripts_inline %}
    <script>


    load_data("{{ constante.id }}", "{{ patient.id }}", "{{ annee }}");


    function load_data(constante, patient, annee) {
      $.getJSON(Routing.generate('gestion_patientconstante_data', {id: constante,annee: annee}), function (data) {
        draw_chart(data);
      });
    }








    function draw_chart(data) {
       var areaChartCanvas = $('#areaChart').get(0).getContext('2d')
      // This will get the first returned node in the jQuery collection.
      var areaChart       = new Chart(areaChartCanvas);
      var unite = "{{ constante.unite }}";
      var datasets = [];

      var keys = Object.keys(data);

      var colors = [
        ['rgba(45, 191, 196, 1)', 'rgba(0, 182, 225, 1)']
      , ['rgba(255, 85, 0, 1)', 'rgba(155, 55, 6, 1)']
       , ['rgba(43, 216, 52, 1)', 'rgba(13, 104, 18, 1)']
        , ['rgba(201, 232, 30, 1)', 'rgba(226, 255, 63, 1)']
         , ['rgba(86, 86, 86, 1)', 'rgba(38, 35, 35, 1)']
      ];

      keys.forEach(function(value, index) {

        //console.log(data[value]);
       
        datasets.push({
            label               : value,

            fillColor           : 'rgba(210, 214, 222, 1)',
            strokeColor         : colors[index][0],
            pointColor          : colors[index][1],
            pointStrokeColor    : '#c1c7d1',
            pointHighlightFill  : '#fff',
            pointHighlightStroke: 'rgba(220,220,220,1)',
            data                : data[value]
          });
      });

      var areaChartData = {
        labels  : ['Janvier', 'Fevrier', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Decembre'],
        datasets: datasets
      }

      var areaChartOptions = {
        //Boolean - If we should show the scale at all
        showScale               : true,
        //Boolean - Whether grid lines are shown across the chart
        scaleShowGridLines      : false,
        //String - Colour of the grid lines
        scaleGridLineColor      : 'rgba(0,0,0,.05)',
        //Number - Width of the grid lines
        scaleGridLineWidth      : 1,
        //Boolean - Whether to show horizontal lines (except X axis)
        scaleShowHorizontalLines: true,
        //Boolean - Whether to show vertical lines (except Y axis)
        scaleShowVerticalLines  : true,
        //Boolean - Whether the line is curved between points
        bezierCurve             : true,
        //Number - Tension of the bezier curve between points
        bezierCurveTension      : 0.3,
        //Boolean - Whether to show a dot for each point
        pointDot                : true,
        //Number - Radius of each point dot in pixels
        pointDotRadius          : 4,
        //Number - Pixel width of point dot stroke
        pointDotStrokeWidth     : 1,
        //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
        pointHitDetectionRadius : 20,
        //Boolean - Whether to show a stroke for datasets
        datasetStroke           : true,
        //Number - Pixel width of dataset stroke
        datasetStrokeWidth      : 2,
        //Boolean - Whether to fill the dataset with a color
        datasetFill             : false,
        //String - A legend template
        legendTemplate          : {% verbatim %}'<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].lineColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>'{% endverbatim %},
        //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
        maintainAspectRatio     : true,
        //Boolean - whether to make the chart responsive to window resizing
        responsive              : true
      };

      //Create the line chart
      areaChart.Line(areaChartData, areaChartOptions);
    }

    
         // Get context with jQuery - using jQuery's .get() method.
   

    </script>
{% endblock %}
